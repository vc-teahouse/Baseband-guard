name: Build Check - All LTS Kernels

permissions:
  contents: write
  actions: write

on:
  push:
  workflow_dispatch:
  pull_request:

jobs:
  build-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kernel_config:
          # Android 12 - Kernel 5.10 LTS
          - android_version: "android12"
            kernel_version: "5.10"
            sub_level: "X"
            os_patch_level: "lts"
          
          # Android 13 - Kernel 5.10 LTS
          - android_version: "android13"
            kernel_version: "5.10"
            sub_level: "X"
            os_patch_level: "lts"
          
          # Android 13 - Kernel 5.15 LTS
          - android_version: "android13"
            kernel_version: "5.15"
            sub_level: "X"
            os_patch_level: "lts"
          
          # Android 14 - Kernel 5.15 LTS
          - android_version: "android14"
            kernel_version: "5.15"
            sub_level: "X"
            os_patch_level: "lts"
          
          # Android 14 - Kernel 6.1 LTS
          - android_version: "android14"
            kernel_version: "6.1"
            sub_level: "X"
            os_patch_level: "lts"
          
          # Android 15 - Kernel 6.6 LTS
          - android_version: "android15"
            kernel_version: "6.6"
            sub_level: "X"
            os_patch_level: "lts"

          # Android 16 - Kernel 6.12 LTS
          - android_version: "android16"
            kernel_version: "6.12"
            sub_level: "X"
            os_patch_level: "lts"

    name: Build Check - ${{ matrix.kernel_config.android_version }} (Kernel ${{ matrix.kernel_config.kernel_version }})
    
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Set CONFIG Environment Variable
        run: |
          # Set CONFIG dynamically based on matrix values
          CONFIG="${{ matrix.kernel_config.android_version }}-${{ matrix.kernel_config.kernel_version }}-${{ matrix.kernel_config.sub_level }}"

          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV

      - name: Setup Build Environment
        run: |
          mkdir -p ./git-repo
          curl https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
          chmod a+rx ./git-repo/repo
          echo "REPO=$GITHUB_WORKSPACE/./git-repo/repo" >> $GITHUB_ENV
          mkdir -p "$CONFIG"

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: gki-kernel-${{ env.CONFIG }}
          max-size: 3G

      - name: Get Baseband-guard Source
        uses: actions/checkout@v4
        with:
          path: ${{ env.CONFIG }}/Baseband-guard

      - name: Initialize and Sync Kernel Source
        run: |
          cd "$CONFIG"
          
          FORMATTED_BRANCH="${{ matrix.kernel_config.android_version }}-${{ matrix.kernel_config.kernel_version }}-${{ matrix.kernel_config.os_patch_level }}"
          
          $REPO init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-${FORMATTED_BRANCH} --repo-rev=v2.16
          
          REMOTE_BRANCH=$(git ls-remote https://android.googlesource.com/kernel/common ${FORMATTED_BRANCH})
          DEFAULT_MANIFEST_PATH=.repo/manifests/default.xml
          if grep -q deprecated <<< $REMOTE_BRANCH; then
            sed -i "s/\"${FORMATTED_BRANCH}\"/\"deprecated\/${FORMATTED_BRANCH}\"/g" $DEFAULT_MANIFEST_PATH
          fi
          
          $REPO --trace sync -c -j$(nproc --all) --no-tags --fail-fast

      - name: Add BBG
        run: |
          cd "$CONFIG"
          BBG_DIR="$(pwd)/Baseband-guard"
          SECURITY_DIR="$(pwd)/common/security"
          SECURITY_MAKEFILE="$SECURITY_DIR/Makefile"
          SECURITY_KCONFIG="$SECURITY_DIR/Kconfig"
          BBG_SYMLINK="$SECURITY_DIR/baseband-guard"
          SELINUX_MAKEFILE="$SECURITY_DIR/selinux/Makefile"
          PATCH_FILE="$BBG_DIR/sepatch.txt"
          echo "Adding BBG..."
          # prefer relative path; fall back to absolute if realpath --relative-to not available
          if command -v realpath >/dev/null 2>&1; then
              rel="$(realpath --relative-to="$SECURITY_DIR" "$BBG_DIR" 2>/dev/null || true)"
          else
              rel="$BBG_DIR"
          fi
          ln -sfn "$rel" "$BBG_SYMLINK" && echo "- symlink created"
          # Makefile entry (idempotent)
          printf '\nobj-$(CONFIG_BBG) += baseband-guard/\n' >> "$SECURITY_MAKEFILE" && echo " - Makefile updated"
          # Kconfig source (insert before last endmenu; fallback append)
          grep -q "source \"security/baseband-guard/Kconfig\"" "$SECURITY_KCONFIG" || sed -i "/endmenu/i\source \"security/baseband-guard/Kconfig\"" "$SECURITY_KCONFIG" && echo " - Kconfig updated"
          # apply sepatch.txt
          cp $SELINUX_MAKEFILE ${SELINUX_MAKEFILE}.bak
          sed -i 's/selinuxfs.o //g' "$SELINUX_MAKEFILE"
          sed -i 's/hooks.o //g' "$SELINUX_MAKEFILE"
          cat "$PATCH_FILE" >> "$SELINUX_MAKEFILE"
          echo "Selinux Makefile patching done!"
          sed -i '/^config LSM$/,/^help$/{ /^[[:space:]]*default/ { /baseband_guard/! s/lockdown/lockdown,baseband_guard/ } }' $SECURITY_KCONFIG

      - name: Apply Kernel Configuration
        run: |
          cd "$CONFIG"
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Build
        run : |
          set -e
          set -x
          cd "$CONFIG"
          echo "Building the kernel..."
          if [ -f "build/build.sh" ]; then
            LTO=thin CC="ccache clang" BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh || exit 1
          else
            tools/bazel build --disk_cache=/home/runner/.cache/bazel --config=fast --lto=thin //common:kernel_aarch64_dist || exit 1
          fi

      - name: upload Ccache debug log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ccache-debug-log
          path: ${{ github.workspace }}/kernel_workspace/ccache.log
